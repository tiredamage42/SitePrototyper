/*

    Wingman (an in-browser html/css/js editor)
    Copyright (C) 2020  Andres Gomez

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.

*/


/*
    handle exporting teh editor contents to a downloadable project zip
    containing an html, css, and js file
*/

import { assertHTMLIsWithinHTMLTags } from './dom-utils.js';

import { exportFilesToZip } from './io-utils.js';

export function initializeProjectExporter (getCurrentFileStrings, appName, appURL) {

    function exportProject () {

        // prompt the user to choose a name for the project
        let projectName = prompt("Choose A Project Name");

        // user cancelled
        if (!projectName)
            return;

        // check if project name empty
        projectName = projectName.trim();
        if (projectName === '') {
            alert('Project Export Name Cannot Be Empty!');
            return;
        }

        let { html, css, js } = getCurrentFileStrings();

        const htmlFileName = 'index.html';
        const jsFileName = 'app.js';
        const cssFileName = 'style.css';

        const generatedFileMessage = `
    File generated by ${appName} [ ${appURL} ].
    Please check for any syntax errors before using in deployment!
`;

        const commentMessagePrefix = `
/*
${generatedFileMessage}
*/
`;

        // get the html string as a node structure
        let htmlNode = assertHTMLIsWithinHTMLTags (html);

        // reconstruct html as string
        let finalHTML = `
<!--
${generatedFileMessage}
-->

<html>
    <head>
        ${htmlNode.getElementsByTagName('head')[0].innerHTML}
        <link rel="stylesheet" type="text/css" href="${cssFileName}" />
    </head>
    <body>
        ${htmlNode.getElementsByTagName('body')[0].innerHTML}
        <script charset="utf-8" type="text/javascript" src="${jsFileName}"></script>
    </body>
</html>
`;

        // the final text for the js and css files (prefixed witht he auto generated comment)
        let finalJS = commentMessagePrefix + js;
        let finalCSS = commentMessagePrefix + css;

        exportFilesToZip (projectName, [
            { name: htmlFileName, text: finalHTML },
            { name: cssFileName, text: finalCSS },
            { name: jsFileName, text: finalJS }
        ]);
    }
    return { exportProject };
}


